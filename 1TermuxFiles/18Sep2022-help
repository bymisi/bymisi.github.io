,Commands

mv = rename
find . -name '*.mxdc' -exec rename .mxdc .mp4 {} +
=rename all files in all subfolders

for file in *.nii; do read line;  mv -v "${file}" "${line}";  done < list
=add names to .nii files from list

recode -f utf8..flat * = ékezetek off

cp = copy
cp file`date +%d%b%Y`-file = add date to filename
rm = delete file
rm -rf delete folder
ls -hal = list folder content
ls|head -n -1 = list all no last
pwd -L = Logical address 
pwd -P = Fizical adress
cd = go to folder
chmod +x = executable
pkill -e -n = kill newest process
comm -23 file1 file2 > file3 = remove 2 from 1
comm -12 file1 file2 = check 2 in 1
uniq file > new file = remove duplicates
sort file > new file = sorted order
cat file = display content
tac file = display content reversed
grep -nr word file = search word in file
----------
Display largest files and folders

du -cks * | sort -rn | head ;
=display current dir folder sizes

find -type f -printf "%s\t%p\n" | sort -n | tail -20 |tac ;
=display biggest files from all subdirs

du -a bymisi.github.io | sort -n -r | head -n 20
=find 20 largest folders

find bymisi.github.io -type f -printf '%s %p\n' | sort -nr | head -20
=find 20 largest files

ls -p | grep -v /
=display just files
----------
edit from console:

cat ~/help = display My Help Note

echo "MyText" >1.txt
 = create 1.txt containing MyText

echo "MyText" >>1.txt
 = add new line (MyText)  to end of 1.txt

echo "SomeHelp" >> ~/help
 = add note to my root help file

echo $'First line.\nSecond line.\nThird line.' >foo.txt

echo ' \n-----------------------\n List installed Packages  \n
-----------------------\n' ;
=create multiple lines

printf '%s\n' 'First line.' 'Second line.' 'Third line.' >foo.txt

----------
GitHub

git config --global user.email "misi@dr.com"
git config --global user.name "misi-c"

ssh -T git@github.com
eval "$(ssh-agent -s)"
ssh-add misikey
(git klone repo:use @git not ssh!)
git clone git@github.com:bymisi/bymisi.github.io.git
----------
Nano

Alt +a -> mark characters
Alt +6 copy multiple lines
Alt +u undo
Alt +e redo
Alt +$ wrap lines
Alt +z hide bar
Alt +x hide help
Alt +n Line Numbers
Alt +o typed Tabs to spaces
Alt +m Mouse
Alt +6 copy line
Ctrl +k kut line
Ctrl +u paste
Ctrl +w Search Forward
Ctrl +Q Search backward
Alt +Q Search next occurrence backward
Alt +W Search next occurrence forward
----------
Regex Nano

Alt + r , Alt + r = Search Replace Regex

Esc + $ = Wrap Lines

\/.*    = delete everything from all lines after /
.+(\/)  = delete everything from all lines before

^        =add to start of line

$       =add to end of line

----------
Backup Termux

tar -zcf /storage/9C33-6BBD/work/github/termux-backup.tar.gz -C /data/data/com.termux/files ./home ./usr
----------
Restore Termux

termux-setup-storage &&
sleep 10
## apt update &&
tar -zxf /storage/9C33-6BBD/work/github/termux-backup.tar.gz -C /data/data/com.termux/files --recursive-unlink --preserve-permissions
exit
----------
REGEX LINUX

gawk -i inplace 'NR>1' pkglist.sh ;
=Remove first line from file (Listing ...)";

gawk '{print NR, $0}' pkg.txt >numbered.txt
gawk -i inplace '{print NR, $0}' pkglist.sh ;
=add numbering to all lines front "

sed '/Ads/,$!d' d3host.txt > myfile.txt ;
to new file =>
=Deleted everything before (Ads)"

sed -i 's/0.0.0.0 //g' myfile.txt ;
to same file =>
=cleared start of all lines (0.0.0.0.)";

sed -i /0.0.0.0\ /\!s/^/0.0.0.0\ / file.txt
=add 0.0.0.0 to lines without 

sed -i '/#/d' myfile.txt ;
=deleted all lines containing #

sed 's/^.//' myfile > newfile 
=remove leading dots from lines matching

sed 's/^#//' myfile > newfile
=remove hash from begining of matching lines

sed -i s/[@#%]//g file.txt
=remove multiple characters from file: #,@,%

sed ':a; N; s/[[:space:]]//g; ta' raw_file.txt
=remove all whitespaces

sed -i '/^[[:space:]]*$/d' myfile.txt ;
=removed empty lines"

sed -i '1,14d' file.txt
=delete first 14 lines

sed -i '$d' file.txt
=delete last line

tac file.txt | sed "1,12{d}" | tac > tempfile && mv tempfile file.txt
=delete last 12 lines

tail -n 13 file >nfile && head -n -13 file >>nfile
=move last 13 lines to start

pkg list-installed >pkglist.sh ;
=create file with istalled app list

sed -i 's/\/.*//' pkglist.sh ;
=Remove content from all lines after /  " ;

sed -i 's/^/;apt satisfy -y /' pkglist.sh ;
=add to begining of all lines (;apt satisfy -y) "
sed -i 's/oexpr/nexpr/g' file.txt
=replace oexpr to nexpr

sed -n '/[102]$/p' 20table.txt
=search lines ending with 1 or 2 or 0

sed -i 's/^/# ✓ /' pkglist.sh ;
=add content to begining of all lines (# ✓ )";

sed -i 's/apt sat/\n&/g' pkglist.sh ;
=add split to all lines before match (apt sat)

sed -i '1s;^;apt update\n;' pkglist.sh ;
=add 1.st line to file to exclude error (apt update)
grep -n google //etc/hosts | awk '{print ln++  ":  "  $0 }'
= check host file for google (numbered all)

----------
CREATE FOLDER SHORTCUT ON extSD
rm ~/../../../../../data/data/com.termux/files/home/storage
   /work && ln -s ~/../../../../../storage/9C33-6BBD/work ~/..
   /../../../../data/data/com.termux/files/home/storage/work &
   & cd ~/../../../../../data/data/com.termux/files/home/stora
   ge/work && ls -hal
----------
Check file exist :
-f =file
-d =dir
-h =link
-L =link

FILE=1.txt
if [ -f "$FILE" ]; then
    echo "$FILE exists."
else 
    echo "$FILE does not exist."
fi
----------
Compare files 1 2

comm -12 e1 e2
=both files have

comm -23 e1 e2
=only in file 1

comm -13 e1 e2
=only in file2

-----------
Hard rename

ls -h  >../filenamelist && cat ../filenamelist
=create filenamelist with original names

ls | cat -n | while read n f; do mv "$f" `printf "%04d.xtx" $n`; done
=rename all files to numbered .xtx files

----------------
Rename files

for file in *.xtx; do read line;  mv -v "${file}" "${line}";  done < ../filenamelist
=rename all xtx files to content lines of filenamelist


for f in *; do mv "$f" $(echo $f | tr ' ' '_'); done
=replace spaces to underscore_ in all filenames

find . -type f -name "* *" -exec bash -c 'mv "$0" "${0// /_}"' {} \;

=replace spaces to underscore_ in all filenames

rename "'" '' **
= remove ' from filename

for file in *; do mv "$file" $(echo "$file" | sed -e 's/[^A-Za-z0-9._-]/_/g'); done
= remove special characters from filenames

-------------------
create Files Multipke files from "sampke.txt"


set -e
 in="${1:-sample.txt}"
 [ ! -f "$in" ] && { echo "$0 - File $in not found."; exit 1; }
 while IFS= read -r file

 do

    echo "Working on $file ..."

    touch "$file"

 done < "${in}"

-------------------
